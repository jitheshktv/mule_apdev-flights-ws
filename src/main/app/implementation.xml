<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:ws="http://www.mulesoft.org/schema/mule/ws" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ws http://www.mulesoft.org/schema/mule/ws/current/mule-ws.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd">
    <flow name="getFlightsFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/flights" doc:name="HTTP" allowedMethods="GET"/>
        <set-variable variableName="airline" value="#[message.inboundProperties.'http.query.params'.airline]" doc:name="Set airline variable"/>
        <flow-ref name="setCodeSubflow" doc:name="setCodeSubflow"/>
        <choice doc:name="Choice">
            <when expression="#[flowVars.airline == 'american']">
                <flow-ref name="getAmericanFlightsFlow" doc:name="getAmericanFlightsFlow"/>
            </when>
            <when expression="#[flowVars.airline == 'delta']">
                <flow-ref name="getDeltaFlightsFlow" doc:name="getDeltaFlightsFlow"/>
            </when>
            <when expression="#[flowVars.airline == 'united']">
                <flow-ref name="getUnitedFlightsFlow" doc:name="getUnitedFlightsFlow"/>
            </when>
            <otherwise>
                <flow-ref name="getAllArlinesFlightsFlow" doc:name="getAllArlinesFlightsFlow"/>
            </otherwise>
        </choice>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload orderBy $.price]]></dw:set-payload>
        </dw:transform-message>
        <logger level="INFO" doc:name="Logger"/>

    </flow>
    <sub-flow name="setCodeSubflow1">
        <set-variable variableName="code" value="#[message.inboundProperties.'http.query.params'.code == empty ? 'SFO' : message.inboundProperties.'http.query.params'.code]" doc:name="SetAirportCodeVariable"/>
    </sub-flow>
    <sub-flow name="setCodeSubflow">
        <set-variable variableName="code" value="#[message.inboundProperties.'http.query.params'.code]" doc:name="SetAirportCodeVariable"/>
        <validation:is-not-empty message="You must pass the destination as a query parameter called code" exceptionClass="java.lang.IllegalArgumentException" value="#[flowVars.code]" doc:name="Validation"/>
    </sub-flow>
    <flow name="getUnitedFlightsFlow">
        <http:request config-ref="United_REST_Request_Configuration" path="/essentials/united/flights/{destination}" method="GET" doc:name="United_REST_Request" metadata:id="7dc457ac-901e-49ee-a0ef-0c1c6537a597">
            <http:request-builder>
                <http:uri-param paramName="destination" value="#[flowVars.code]"/>
            </http:request-builder>
        </http:request>
        <dw:transform-message doc:name="Transform Message" metadata:id="1b099952-9bd9-4cda-8bda-3dfc257754ce">
            <dw:input-payload doc:sample="united-flights-example.json"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload.flights map ((flight , indexOfFlight) -> {
	airlineName: flight.airlineName,
	availableSeats: flight.emptySeats,
	departureDate: flight.departureDate,
	destination: flight.destination,
	flightCode: flight.code,
	origination: flight.origin,
	planeType: flight.planeType,
	price: flight.price
} as :object {
	class : "com.mulesoft.training.Flight"
})]]></dw:set-payload>
        </dw:transform-message>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="getAmericanFlightsFlow">
        <http:request config-ref="American_REST_Request_Configuration" path="/flights" method="GET" doc:name="American_REST_Request">
            <http:request-builder>
                <http:query-param paramName="destination" value="#[flowVars.code]"/>
                <http:query-param paramName="client_secret" value=""/>
                <http:query-param paramName="client_id" value=""/>
            </http:request-builder>
        </http:request>
        <dw:transform-message doc:name="Transform Message" metadata:id="71af2b34-0d9f-45f6-beb0-2241b8d87c3b">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map ((payload01 , indexOfPayload01) -> {
	airlineName: "American",
	availableSeats: payload01.emptySeats,
	departureDate: payload01.departureDate,
	destination: payload01.destination,
	flightCode: payload01.code,
	origination: payload01.origin,
	planeType: payload01.plane.type,
	price: payload01.price
} as :object {
	class : "com.mulesoft.training.Flight"
})]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <flow name="getDeltaFlightsFlow">
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/xml
%namespace ns0 http://soap.training.mulesoft.com/
---
{
	ns0#findFlight: {
		destination: flowVars.code as :string
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <ws:consumer config-ref="Delta_Web_Service_Consumer" operation="findFlight" doc:name="Delta_SOAP_Request"/>
        <dw:transform-message doc:name="Transform Message" metadata:id="de10c7a9-0d69-4c64-9fc1-971df8d869b7">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
%namespace ns0 http://soap.training.mulesoft.com/
---
payload.ns0#findFlightResponse.*return map ((return , indexOfReturn) -> {
	airlineName: return.airlineName,
	availableSeats: return.emptySeats,
	departureDate: return.departureDate,
	destination: return.destination,
	flightCode: return.code,
	origination: return.origin,
	planeType: return.planeType,
	price: return.price
} as :object {
	class : "com.mulesoft.training.Flight"
})]]></dw:set-payload>
        </dw:transform-message>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="getAllArlinesFlightsFlow">
        <scatter-gather doc:name="Scatter-Gather">
            <processor-chain>
                <flow-ref name="getDeltaFlightsFlow" doc:name="getDeltaFlightsFlow"/>
                <filter ref="Filter_Not_ArrayList" doc:name="Filter_Not_ArrayList"/>
            </processor-chain>
            <processor-chain>
                <flow-ref name="getAmericanFlightsFlow" doc:name="getAmericanFlightsFlow"/>
                <filter ref="Filter_Not_ArrayList" doc:name="Filter_Not_ArrayList"/>
            </processor-chain>
            <processor-chain>
                <flow-ref name="getUnitedFlightsFlow" doc:name="getUnitedFlightsFlow"/>
                <filter ref="Filter_Not_ArrayList" doc:name="Filter_Not_ArrayList"/>
            </processor-chain>
        </scatter-gather>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
flatten payload]]></dw:set-payload>
        </dw:transform-message>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="postFlightFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/flights" allowedMethods="POST" doc:name="HTTP" metadata:id="087f7aee-00f2-4b1e-9ab9-af81159f7c10"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:input-payload doc:sample="E:\mule\mule-training-dev_fundamentals\MUFundamentals3.9_studentFiles\examples\flight-example.json"/>
            <dw:set-payload resource="classpath:json_flight_playground.dwl"/>
            <dw:set-variable variableName="xml"><![CDATA[%dw 1.0
%output application/xml
---
data : {
	hub : "MUA",
	flight @(airline : payload.airline): {
		code : payload.toAirportCode
	}
}]]></dw:set-variable>
        </dw:transform-message>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="postMultipleFlightsFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/multipleflights" allowedMethods="POST" doc:name="HTTP" metadata:id="af875576-0d90-439e-adb3-0483bd8e9a34"/>
        <dw:transform-message doc:name="Transform Message" metadata:id="14810fb2-55b4-43b7-a6e0-da68e608ec19">
            <dw:input-payload doc:sample="flights-example.xml" mimeType="application/xml"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
%namespace ns0 http://soap.training.mulesoft.com/
%type currency = :string {format: "###.00"}
%type flights = :object {class: "com.mulesoft.training.Flight"}
---
flights : payload.ns0#listAllFlightsResponse.*return map {
	
		destination : $.destination,
		price : $.price as :number as :currency,
		planeType : upper ($.planeType replace /(Boing)/ with "Boeing"),
		departureDate : $.departureDate as :date {format: "yyyy/MM/dd"} as :string {format: "MMM dd, yyyy"},
		availableSeats : $.emptySeats as :number,
		totalSeats : lookup("getTotalSeatsFlow",{type: $.planeType})
		//totalSeats : getNumSeats($.planeType)
} //as :flights orderBy $.departureDate orderBy $.price distinctBy $ filter ($.availableSeats !=0) 
]]></dw:set-payload>
        </dw:transform-message>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="getTotalSeatsFlow">
        <expression-component doc:name="Expression"><![CDATA[if (payload.type.contains('737')){
	payload=150;
	} else {
	payload=300;
}]]></expression-component>
    </flow>
</mule>
